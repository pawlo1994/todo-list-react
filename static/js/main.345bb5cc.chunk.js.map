{"version":3,"sources":["Form/styled.js","theme.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","theme","breakpoint","StyledInput","input","StyledButton","button","buttonMainColor","Form","addNewTask","inputRef","useRef","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trim","current","focus","ref","placeholder","value","onChange","target","required","StyledTasks","ul","StyledItem","li","hidden","css","StyledSpan","span","done","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","StyledButtons","div","StyledButtonsButton","Buttons","toggleHideDone","setAllDone","length","disabled","every","StyledSection","section","StyledSectionHeader","header","Section","title","body","extraHeaderContent","StyledHeader","Header","StyledContainer","main","Container","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.345bb5cc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    display: flex;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px){\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    flex-grow: 1;\r\n    margin-right: 20px;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px){\r\n        margin: 0 0 10px;\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    flex-shrink: 0;\r\n    padding: 10px;\r\n    background-color: ${({ theme }) => theme.buttonMainColor};\r\n    color: #fff;\r\n    border: none;\r\n    transition: background-color 0.3s, transform 0.3s;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: hsl(180, 100%, 30%);\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active{\r\n        outline: 2px solid #000;\r\n    }\r\n`;","export const theme = {\r\n    breakpoint: 767,\r\n    buttonMainColor: \"teal\",\r\n};","import { useState, useRef } from \"react\";\r\nimport { StyledForm, StyledInput, StyledButton } from \"./styled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"../theme\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const inputRef = useRef(null);\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!newTaskContent.trim()) {\r\n            setNewTaskContent(\"\");\r\n            return;\r\n        }\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n        inputRef.current.focus();\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <StyledForm\r\n                onSubmit={onFormSubmit}\r\n            >\r\n                <StyledInput\r\n                    ref={inputRef}\r\n                    placeholder=\"Co jest do zrobienia?\"\r\n                    value={newTaskContent}\r\n                    onChange={({ target }) => setNewTaskContent(target.value)}\r\n                    required\r\n                />\r\n                <StyledButton>Dodaj zadanie</StyledButton>\r\n            </StyledForm>\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledTasks = styled.ul`\r\n    list-style-type: none;\r\n    margin: 0 auto;\r\n    padding: 40px 10px 20px;\r\n`;\r\n\r\nexport const StyledItem = styled.li`\r\n    padding: 10px 20px;\r\n    display: grid;\r\n    grid-gap: 10px;\r\n    grid-template-columns: auto 1fr auto;\r\n    align-items: center;\r\n    border-bottom: 2px solid #ddd;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const StyledSpan = styled.span`\r\n    color: #333;\r\n    word-break: break-word;\r\n    padding: 0 5px;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    display: flex;\r\n    padding: 5px;\r\n    width: 30px;\r\n    height: 30px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: none;\r\n    transition: background-color 0.3s;\r\n\r\n    ${({ done }) => done && css`\r\n        background-color: #090;\r\n        color: #fff;\r\n\r\n        &:hover{\r\n            background-color: #0a0;\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: #f00;\r\n        color: #fff;\r\n\r\n        &:hover{\r\n            background-color: #f60;\r\n        }\r\n    `}\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n\r\n    &:active{\r\n        outline: 2px solid #000;\r\n    }\r\n`;","import { StyledTasks, StyledItem, StyledSpan, StyledButton } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <StyledTasks>\r\n        {tasks.map(task => (\r\n            <StyledItem hidden={hideDone && task.done}\r\n                key={task.id}\r\n            >\r\n                <StyledButton done\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ”\" : \"\"}\r\n                </StyledButton>\r\n                <StyledSpan done={task.done}>\r\n                    {task.content}\r\n                </StyledSpan>\r\n                <StyledButton remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ðŸ—‘\r\n                </StyledButton>\r\n            </StyledItem>\r\n        ))}\r\n    </StyledTasks>\r\n);\r\n\r\nexport default Tasks;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledButtons = styled.div`\r\n    display: flex;\r\n    list-style-type: none;\r\n    padding: 0; \r\n\r\n    @media(max-width:${({ theme }) => theme.breakpoint}px){\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport const StyledButtonsButton = styled.button`\r\n    padding-left: 20px;\r\n    background-color: transparent;\r\n    border: none;\r\n    color: ${({ theme }) => theme.buttonMainColor};\r\n    transition: color 0.3s;\r\n\r\n    @media(max-width:${({ theme }) => theme.breakpoint}px){\r\n        padding-left: 0;\r\n        padding-bottom: 15px;\r\n    }\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n\r\n    &:hover{\r\n        color: hsl(180, 100%, 35%);\r\n        cursor: pointer;\r\n    }\r\n\r\n    &:active{\r\n        color: hsl(180, 100%, 20%);\r\n    }\r\n\r\n    &:disabled{\r\n        color: #999;\r\n        cursor: default;\r\n    }\r\n`;","import { StyledButtons, StyledButtonsButton } from \"./styled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"../theme\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    tasks.length > 0 && (\r\n        <ThemeProvider theme={theme}>\r\n            <StyledButtons>\r\n                <StyledButtonsButton\r\n                    onClick={toggleHideDone}\r\n                >\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </StyledButtonsButton>\r\n                <StyledButtonsButton\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                    onClick={setAllDone}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </StyledButtonsButton>\r\n            </StyledButtons>\r\n        </ThemeProvider>\r\n    )\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: #fff;\r\n    margin: 30px;\r\n    padding: 0;\r\n    box-shadow: 0px 0px 2px 2px #ddd;\r\n`;\r\n\r\nexport const StyledSectionHeader = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 2px solid #ddd;\r\n    padding: 0 20px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px){\r\n        flex-direction: column;\r\n    }\r\n`;","import { StyledSection, StyledSectionHeader } from \"./styled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"../theme\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <ThemeProvider theme={theme}>\r\n        <StyledSection>\r\n            <StyledSectionHeader>\r\n                <h2>{title}</h2>\r\n                {extraHeaderContent}\r\n            </StyledSectionHeader>\r\n            {body}\r\n        </StyledSection>\r\n    </ThemeProvider>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    margin: 40px 30px 0;\r\n`;","import { StyledHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <StyledHeader>\r\n        <h1>{title}</h1>\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    max-width: 1024px;\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","import { useState } from 'react';\r\nimport Form from './Form';\r\nimport Tasks from './Tasks';\r\nimport Buttons from './Buttons';\r\nimport Section from './Section';\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport { useTasks } from './useTasks';\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const {\r\n    tasks,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    setAllDone,\r\n    addNewTask\r\n  } = useTasks();\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista ZadaÅ„\" />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={<Form\r\n          addNewTask={addNewTask}\r\n        />}\r\n      />\r\n      <Section title=\"Lista zadaÅ„\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone}\r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n          />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"tasks\")) || []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n            return task;\r\n        }));\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks =>\r\n            [...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: !tasks.length ? 1 : tasks[tasks.length - 1].id + 1,\r\n            },\r\n            ]);\r\n    };\r\n\r\n    return { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask };\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}