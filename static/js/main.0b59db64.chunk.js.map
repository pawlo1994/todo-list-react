{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","placeholder","value","onChange","target","required","Tasks","tasks","hideDone","removeTask","toggleTaskDone","setTasks","parsedTasks","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b59db64.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!newTaskContent.trim()) {\r\n            setNewTaskContent(\"\");\r\n            return;\r\n        }\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className=\"form\"\r\n            onSubmit={onFormSubmit}\r\n        >\r\n            <input\r\n                className=\"form__input\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n                required\r\n            />\r\n            <button className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import { useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone, setTasks }) => {\r\n    const parsedTasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    useEffect(() => {\r\n        setTasks(parsedTasks);\r\n    }, []);\r\n\r\n    return (\r\n        <ul className=\"tasks\">\r\n            {tasks.map(task => (\r\n                <li\r\n                    key={task.id}\r\n                    className={`tasks__item ${hideDone && task.done ? \"tasks__item--hidden\" : \"\"}`}\r\n                >\r\n                    <button\r\n                        className=\"tasks__button tasks__button--done\"\r\n                        onClick={() => toggleTaskDone(task.id)}\r\n                    >\r\n                        {task.done ? \"âœ”\" : \"\"}\r\n                    </button>\r\n                    <span className={`tasks__span ${task.done ? \"tasks__span--done\" : \"\"}`}>\r\n                        {task.id}. {task.content}\r\n                    </span>\r\n                    <button\r\n                        className=\"tasks__button tasks__button--remove\"\r\n                        onClick={() => removeTask(task.id)}\r\n                    >\r\n                        ðŸ—‘\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Tasks;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    tasks.length > 0 && (\r\n        <div className=\"buttons\">\r\n            <button\r\n                className=\"buttons__button\"\r\n                onClick={toggleHideDone}\r\n            >\r\n                {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n            </button>\r\n            <button\r\n                className=\"buttons__button\"\r\n                disabled={tasks.every(({ done }) => done)}\r\n                onClick={setAllDone}\r\n            >\r\n                UkoÅ„cz wszystkie\r\n            </button>\r\n        </div>\r\n    )\r\n);\r\n\r\nexport default Buttons;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n            <h2>{title}</h2>\r\n            {extraHeaderContent}\r\n        </header>\r\n        {body}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header className=\"header\">\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useState } from 'react';\r\nimport Form from './Form';\r\nimport Tasks from './Tasks';\r\nimport Buttons from './Buttons';\r\nimport Section from './Section';\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\n\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      if (task.id === id) {\r\n        return { ...task, done: !task.done };\r\n      }\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({\r\n      ...task,\r\n      done: true,\r\n    })));\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks(tasks =>\r\n      [...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: !tasks.length ? 1 : tasks[tasks.length - 1].id + 1,\r\n      },\r\n      ]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista ZadaÅ„\" />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={<Form\r\n          addNewTask={addNewTask}\r\n        />} />\r\n      <Section title=\"Lista zadaÅ„\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            setTasks={setTasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone}\r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n          />\r\n        } />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}